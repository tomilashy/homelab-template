# help from https://buildvirtual.net/deploy-a-kubernetes-cluster-using-ansible/
# https://www.theurbanpenguin.com/an-ansible-microk8s-install-of-kubernetes/
# https://github.com/istvano/ansible_role_microk8s
# https://github.com/fabianlee/microk8s-nginx-istio
# https://www.reddit.com/r/ansible/comments/a8yhcj/passing_vars_across_plays/
# https://www.reddit.com/r/ansible/comments/sn9l9d/microk8s_join_cluster_with_ansible/
---
- name: setup Microk8s
  hosts: k8s_cluster
  become: yes
  # become_user: ansible_user
  # vars:
  #     install:
  tasks:
    - name: Install docker
      apt:
        name: docker.io
        update_cache: true
        cache_valid_time: 86400
        state: present
      when: (install is defined)

    - name: Install microk8s
      snap:
        name: microk8s
        state: present
        classic: yes
      when: (install is defined)
       

    - name: Which user
      debug: msg="Hello, {{ lookup("env", "USER") }}!"

    - name: Add user to Docker and Microk8s groups, they will need to logout and in again
      user:
        name: '{{ lookup("env", "USER") }}'
        state: present
        groups:
          # - docker
          - microk8s
        append: true

    - name: Add alias to helm3
      become: false
      lineinfile:
        path: '{{ lookup("env", "HOME") }}/.bashrc'
        regexp: '^alias helm='
        line: 'alias helm="microk8s helm"'
        state: present
        
    - name: Add alias to kubectl
      become: false
      lineinfile:
        path: '{{ lookup("env", "HOME") }}/.bashrc'
        regexp: '^alias kubectl='
        line: 'alias kubectl="microk8s kubectl"'
        state: present
        
    # - name: Add alias to kubectl all namespace
    #   become: false
    #   lineinfile:
    #     path: '{{ lookup("env", "HOME") }}/.bashrc'
    #     regexp: '^alias k='
    #     line: 'alias k="microk8s kubectl -A"'
    #     state: present

    - name: Add bash completion for kubectl
      become: false
      lineinfile:
        path: '{{ lookup("env", "HOME") }}/.bashrc'
        regexp: '^source \<\(kubectl'
        line: 'source <(kubectl completion bash)'
        state: present


- name: Master setup
  hosts: master_main
  become: yes
  tasks:
    - name: Gather facts from k8s_cluster
      ansible.builtin.setup:
      delegate_to: "{{ item }}"
      delegate_facts: true
      loop: "{{ groups['k8s_cluster'] }}"

    - name: create .kube directory
      file:
        path: $HOME/.kube
        state: directory
        mode: 0755

    - name: Create join key
      shell: microk8s add-node
      register: join_cluster

    - name: Create persistent var
      set_fact:
        join_master: "{{ join_cluster.stdout_lines[1] }}"
        join_worker: "{{ join_cluster.stdout_lines[4] }}"
      delegate_to: "{{ item }}"
      delegate_facts: true
      loop: "{{ groups['k8s_cluster'] }}"

    - name: Print join worker command
      ansible.builtin.debug:
        var: join_worker

    - name: Print join master command
      ansible.builtin.debug:
        var: join_master
    
    - name: Enumerate all cluster HA hosts within the hosts file
      ansible.builtin.blockinfile:
        dest: /etc/hosts
        marker: "# {mark} ANSIBLE MANAGED: microk8s HA Cluster Hosts"
        content: |
          {% for host in groups["masters"] %}
          {{ hostvars[host].ansible_default_ipv4.address }} {{ hostvars[host].ansible_hostname }}
          {% endfor %}

    - name: Enumerate all cluster worker hosts within the hosts file
      ansible.builtin.blockinfile:
        dest: /etc/hosts
        marker: "# {mark} ANSIBLE MANAGED: microk8s WORKER Cluster Hosts"
        content: |
          {% for host in groups["workers"] %}
          {{ hostvars[host].ansible_default_ipv4.address }} {{ hostvars[host].ansible_hostname }}
          {% endfor %}
# hostvars[inventory_hostname]

- name: Worker setup
  hosts: workers
  become: yes
  tags:
    - workers
  tasks:
    - name: Print join key worker
      debug:
        msg: |
          {{join_master}}
          {{join_worker}}
        # var: hostvars["master_main"]
        # var: join_worker

    - name: Join cluster
      shell: "{{join_worker}}"
      